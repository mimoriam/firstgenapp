import 'package:flutter/material.dart';
import 'package:firstgenapp/constants/appColors.dart';
import 'package:intl/intl.dart';
import 'dart:ui'; // Needed for ImageFilter.blur

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  // UPDATED: Added 'isOnline' status to the mock data.
  final List<Map<String, dynamic>> _matches = [
    {
      "name": "James",
      "age": 20,
      "distance": 2.2,
      "interests": "MUSIC, COFFEE",
      "country": "Indian",
      "isOnline": true,
    },
    {
      "name": "Jessica",
      "age": 22,
      "distance": 3.1,
      "interests": "ART, MOVIES",
      "country": "German",
      "isOnline": false,
    },
    {
      "name": "Carlos",
      "age": 25,
      "distance": 4.5,
      "interests": "DANCE, FOOD",
      "country": "Spanish",
      "isOnline": true,
    },
    {
      "name": "Priya",
      "age": 21,
      "distance": 5.0,
      "interests": "TRAVEL, BOOKS",
      "country": "Indian",
      "isOnline": false,
    }
  ];

  final List<Map<String, dynamic>> _events = [
    {
      "image": "https://picsum.photos/seed/e1/400/200",
      "title": "Diwali Cooking Workshop",
      "date": "8 December, 2023",
      "location": "Spice Garden Kitchen",
      "description":
      "Soothing audio and gentle vibrations to ease discomfort. Soothing audio and gentle vibrations to.",
      "attendees": 31,
      "isInterested": true
    },
    {
      "image": "https://picsum.photos/seed/e2/400/200",
      "title": "Cultural Music Night",
      "date": "15 December, 2023",
      "location": "The Grand Hall",
      "description":
      "Experience the rich musical traditions from around the world. A night of melody and harmony.",
      "attendees": 85,
      "isInterested": false
    }
  ];

  final List<Map<String, dynamic>> _activities = [
    {
      "avatar": "https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=100&q=80",
      "text": "Maria Santos liked your profile",
      "time": "2 hours ago"
    },
    {
      "avatar": "https://images.unsplash.com/photo-1517841905240-472988babdf9?w=100&q=80",
      "text": "You matched with Leila Okafor",
      "time": "2 hours ago"
    }
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.primaryBackground,
      body: SafeArea(
        child: SingleChildScrollView(
          // UPDATED: Further reduced padding for a more compact layout.
          child: Padding(
            padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 8.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                _buildHeader(),
                const SizedBox(height: 16),
                _buildStatsSection(),
                const SizedBox(height: 16),
                _buildSectionHeader("New Matches"),
                const SizedBox(height: 10),
                _buildNewMatchesList(),
                const SizedBox(height: 16),
                _buildSectionHeader("Recent Events"),
                const SizedBox(height: 10),
                _buildRecentEventsList(),
                const SizedBox(height: 16),
                _buildSectionHeader("Recent Activity"),
                const SizedBox(height: 10),
                _buildRecentActivityList(),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildHeader() {
    final String currentDate =
    DateFormat('d MMMM').format(DateTime.now());
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: const [
              Text(
                "Hi, Lily ðŸ‘‹",
                style: TextStyle(
                    fontSize: 22, // Reduced font size
                    fontWeight: FontWeight.bold,
                    color: AppColors.textPrimary),
              ),
              SizedBox(height: 2),
              Text(
                "Here's what's happening in your world today.",
                style: TextStyle(fontSize: 13, color: AppColors.textSecondary),
              ),
            ],
          ),
        ),
        const SizedBox(width: 8),
        Padding(
          padding: const EdgeInsets.only(top: 4.0),
          child: Text(
            "Today, $currentDate",
            style: const TextStyle(
                fontSize: 12,
                fontWeight: FontWeight.w500,
                color: AppColors.primaryRed),
          ),
        ),
      ],
    );
  }

  Widget _buildStatsSection() {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        _buildStatItem("12", "Likes", const Color(0xFFFCE8E8), const Color(0xFFC62828)),
        _buildStatItem("3", "New Matches", const Color(0xFFE8F5E9), const Color(0xFF2E7D32)),
        _buildStatItem("5", "Messages", const Color(0xFFE3F2FD), const Color(0xFF1565C0)),
        _buildStatItem("6", "Events", const Color(0xFFFFFDE7), const Color(0xFFF9A825)),
      ],
    );
  }

  Widget _buildStatItem(String count, String label, Color bgColor, Color textColor) {
    return Column(
      children: [
        Container(
          // UPDATED: Reduced size of stat boxes.
          width: 80,
          height: 65,
          decoration: BoxDecoration(
            color: bgColor,
            borderRadius: BorderRadius.circular(14),
          ),
          child: Center(
            child: Text(
              count,
              style: TextStyle(
                  fontSize: 26, // Reduced font size
                  fontWeight: FontWeight.bold,
                  color: textColor),
            ),
          ),
        ),
        const SizedBox(height: 4),
        Text(
          label,
          style: const TextStyle(
              fontSize: 12,
              color: AppColors.textSecondary,
              fontWeight: FontWeight.w500),
        ),
      ],
    );
  }

  Widget _buildSectionHeader(String title) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Text(
          title,
          style: const TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.bold,
              color: AppColors.textPrimary),
        ),
        TextButton(
          onPressed: () {},
          child: const Text(
            "See All",
            style: TextStyle(
                fontSize: 14,
                fontWeight: FontWeight.w600,
                color: AppColors.primaryRed),
          ),
        ),
      ],
    );
  }

  Widget _buildNewMatchesList() {
    return SizedBox(
      // UPDATED: Reduced height.
      height: 170,
      child: ListView.builder(
        scrollDirection: Axis.horizontal,
        itemCount: _matches.length,
        itemBuilder: (context, index) {
          return _buildMatchCard(_matches[index]);
        },
      ),
    );
  }

  Widget _buildMatchCard(Map<String, dynamic> match) {
    return Container(
      // UPDATED: Reduced width and margin.
      width: 130,
      margin: const EdgeInsets.only(right: 12),
      child: ClipRRect(
        borderRadius: BorderRadius.circular(20),
        child: Stack(
          fit: StackFit.expand,
          children: [
            Image.asset(
              'images/backgrounds/new_matches.png',
              fit: BoxFit.cover,
              errorBuilder: (context, error, stackTrace) {
                return Container(
                    color: Colors.grey[300],
                    child: const Center(child: Icon(Icons.broken_image, color: Colors.grey))
                );
              },
            ),
            Container(
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  begin: Alignment.topCenter,
                  end: Alignment.bottomCenter,
                  colors: [
                    Colors.transparent,
                    Colors.black.withOpacity(0.2),
                    Colors.black.withOpacity(0.8)
                  ],
                  stops: const [0.0, 0.5, 1.0],
                ),
              ),
            ),
            if (match['country'] != null && match['country']!.isNotEmpty)
              Positioned(
                top: 12,
                left: 12,
                child: _buildCountryPill(match['country']!),
              ),
            Positioned(
              bottom: 12,
              left: 12,
              right: 12,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    "${match['distance']} km away",
                    style: TextStyle(
                        color: Colors.white.withOpacity(0.9), fontSize: 12),
                  ),
                  const SizedBox(height: 4),
                  Row(
                    children: [
                      Flexible(
                        child: Text(
                          "${match['name']}, ${match['age']}",
                          style: const TextStyle(
                              color: Colors.white,
                              fontWeight: FontWeight.bold,
                              fontSize: 16),
                          overflow: TextOverflow.ellipsis,
                        ),
                      ),
                      const SizedBox(width: 4),
                      if (match['isOnline'] == true)
                        Container(
                          width: 8,
                          height: 8,
                          decoration: BoxDecoration(
                            color: Colors.green,
                            shape: BoxShape.circle,
                          ),
                        ),
                    ],
                  ),
                  const SizedBox(height: 4),
                  Text(
                    match['interests'],
                    style: TextStyle(
                        color: Colors.white.withOpacity(0.9), fontSize: 10),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildCountryPill(String country) {
    return ClipRRect(
      borderRadius: BorderRadius.circular(20.0),
      child: BackdropFilter(
        filter: ImageFilter.blur(sigmaX: 5.0, sigmaY: 5.0),
        child: Container(
          padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),
          decoration: BoxDecoration(
            color: Colors.white.withOpacity(0.2),
            borderRadius: BorderRadius.circular(20.0),
          ),
          child: Text(
            country,
            style: const TextStyle(
              color: Colors.white,
              fontSize: 12,
              fontWeight: FontWeight.w500,
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildRecentEventsList() {
    return ListView.separated(
      shrinkWrap: true,
      physics: const NeverScrollableScrollPhysics(),
      itemCount: _events.length,
      separatorBuilder: (context, index) => const SizedBox(height: 12),
      itemBuilder: (context, index) {
        return _EventCard(event: _events[index]);
      },
    );
  }

  Widget _buildRecentActivityList() {
    return ListView.separated(
      shrinkWrap: true,
      physics: const NeverScrollableScrollPhysics(),
      itemCount: _activities.length,
      separatorBuilder: (context, index) => const SizedBox(height: 6),
      itemBuilder: (context, index) {
        return _buildActivityItem(_activities[index]);
      },
    );
  }

  Widget _buildActivityItem(Map<String, dynamic> activity) {
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 10),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        border: Border.all(color: Colors.grey.shade200, width: 1),
      ),
      child: Row(
        children: [
          CircleAvatar(
            radius: 24,
            backgroundImage: NetworkImage(activity['avatar']),
          ),
          const SizedBox(width: 16),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  activity['text'],
                  style: const TextStyle(
                      fontSize: 14,
                      fontWeight: FontWeight.w600,
                      color: AppColors.textPrimary),
                ),
                const SizedBox(height: 4),
                Text(
                  activity['time'],
                  style: const TextStyle(fontSize: 12, color: AppColors.textSecondary),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}

class _EventCard extends StatefulWidget {
  final Map<String, dynamic> event;

  const _EventCard({required this.event});

  @override
  __EventCardState createState() => __EventCardState();
}

class __EventCardState extends State<_EventCard> {
  late bool _isInterested;

  @override
  void initState() {
    super.initState();
    _isInterested = widget.event['isInterested'];
  }

  Widget _buildInfoItem(IconData icon, String text, Color color) {
    return Row(
      children: [
        Icon(icon, size: 16, color: color),
        const SizedBox(width: 6),
        Text(
          text,
          style: TextStyle(fontSize: 12, color: color, fontWeight: FontWeight.w500),
        ),
      ],
    );
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(20),
        border: Border.all(color: Colors.grey.shade200, width: 1),
      ),
      child: Padding(
        // UPDATED: Reduced padding inside the card.
        padding: const EdgeInsets.all(10.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            ClipRRect(
              borderRadius: BorderRadius.circular(12),
              child: Image.network(
                widget.event['image'],
                height: 150,
                width: double.infinity,
                fit: BoxFit.cover,
              ),
            ),
            const SizedBox(height: 12),
            Text(
              widget.event['title'],
              style: const TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: AppColors.textPrimary),
            ),
            const SizedBox(height: 10),
            Wrap(
              spacing: 16.0,
              runSpacing: 8.0,
              children: [
                _buildInfoItem(Icons.calendar_today, widget.event['date'], Colors.green.shade700),
                _buildInfoItem(Icons.group_work, widget.event['location'], Colors.blue.shade700),
                _buildInfoItem(Icons.people, "${widget.event['attendees']} Attending", Colors.orange.shade800),
              ],
            ),
            const SizedBox(height: 6),
            Text(
              widget.event['description'],
              maxLines: 2,
              overflow: TextOverflow.ellipsis,
              style: const TextStyle(
                  fontSize: 14, color: AppColors.textSecondary, height: 1.5),
            ),
            const SizedBox(height: 16),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Expanded(
                  child: _isInterested
                      ? _buildInterestedButton()
                      : _buildNotInterestedButton(),
                ),
                const SizedBox(width: 12),
                Expanded(
                  child: TextButton(
                    onPressed: () {},
                    style: TextButton.styleFrom(
                      padding: const EdgeInsets.symmetric(vertical: 12),
                      backgroundColor: AppColors.secondaryBackground,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                    ),
                    child: const Text(
                      "View Community",
                      style: TextStyle(
                          color: AppColors.primaryRed,
                          fontWeight: FontWeight.w600),
                    ),
                  ),
                ),
              ],
            )
          ],
        ),
      ),
    );
  }

  Widget _buildInterestedButton() {
    return ElevatedButton.icon(
      onPressed: () {
        setState(() {
          _isInterested = false;
        });
      },
      icon: const Icon(Icons.check, color: Colors.white, size: 20),
      label: const Text("I'm Interested", style: TextStyle(color: Colors.white)),
      style: ElevatedButton.styleFrom(
          padding: const EdgeInsets.symmetric(vertical: 12),
          backgroundColor: AppColors.primaryRed,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12),
          ),
          elevation: 2,
          shadowColor: AppColors.primaryRed.withOpacity(0.4)
      ),
    );
  }

  Widget _buildNotInterestedButton() {
    return OutlinedButton(
      onPressed: () {
        setState(() {
          _isInterested = true;
        });
      },
      style: OutlinedButton.styleFrom(
        padding: const EdgeInsets.symmetric(vertical: 12),
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(12),
        ),
        side: const BorderSide(color: AppColors.primaryRed),
      ),
      child: const Text(
        "I'm Interested",
        style: TextStyle(
            color: AppColors.primaryRed, fontWeight: FontWeight.w600),
      ),
    );
  }
}
